name: Admin CI

on:
  pull_request:
    branches:
      - develop
    paths:
      - "packages/admin/**"
      - "packages/gap-web-ui/**"
      - ".github/workflows/admin-ci.yml"
      - "package.json"
      - "yarn.lock"

jobs:
  test:
    name: Test app

    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Generate .env files
        run: |
          cp packages/admin/.env.example packages/admin/.env
          sed -i -e '/TINYMCE_API_KEY=/s/$/${{ secrets.TINYMCE_API_KEY }}/g' packages/admin/.env

      - name: Read .nvmrc
        id: nvm
        run: echo "name=NVMRC::$(cat .nvmrc)" >> $GITHUB_OUTPUT

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --immutable

      - name: Generate gap-web-ui cache name
        id: gap-web-ui-cache-name
        run: |
          NAME=gap-web-ui-${{ hashFiles('**/packages/gap-web-ui/**/*.js', '**/packages/gap-web-ui/**/*.jsx', '**/packages/gap-web-ui/**/*.ts', '**/packages/gap-web-ui/**/*.tsx') }}
          echo "name=$NAME" >> $GITHUB_OUTPUT

      - name: Restore gap-web-ui cache
        id: gap-web-ui-cache
        uses: actions/cache/restore@v3
        with:
          path: ${{ github.workspace }}/packages/gap-web-ui/dist
          key: ${{ steps.gap-web-ui-cache-name.outputs.name }}

      - name: Build gap-web-ui
        if: steps.gap-web-ui-cache.outputs.cache-hit != 'true'
        run: yarn workspace gap-web-ui build

      - name: Save gap-web-ui cache
        if: steps.gap-web-ui-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: ${{ github.workspace }}/packages/gap-web-ui/dist
          key: ${{ steps.gap-web-ui-cache-name.outputs.name }}

      - name: Generate admin next cache name
        id: admin-next-cache-name
        run: |
          NAME=admin-next-cache-${{ hashFiles('**/packages/admin/src/**/*.js', '**/packages/admin/src/**/*.jsx', '**/packages/admin/src/**/*.ts', '**/packages/admin/src/**/*.tsx') }}
          echo "name=$NAME" >> $GITHUB_OUTPUT

      - name: Restore next cache
        id: restore-next-cache
        uses: actions/cache/restore@v3
        with:
          path: ${{ github.workspace }}/packages/admin/.next/cache
          key: ${{ steps.admin-next-cache-name.outputs.name }}

      - name: Build application
        run: yarn workspace admin build

      - name: Save next cache
        if: steps.restore-next-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: ${{ github.workspace }}/packages/admin/.next/cache
          key: ${{ steps.admin-next-cache-name.outputs.name }}
                
      - name: Lint files
        run: yarn workspace admin lint

      - name: Units Tests
        run: yarn workspace admin jest --ci